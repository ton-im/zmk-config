#include <behaviors.dtsi>
#include <corne.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT  0
#define LOWER    1
#define RAISE    2
#define SYSTEM   3

&led_strip {
    chain-length = <27>;
    // 21 backlight + 6 glowlight
};

/ {
        combos {
                compatible = "zmk,combos";
                combo_1 {
                        timeout-ms = <50>;
                        key-positions = <0 1>;
                        bindings = <&kp N1>;
                        layers = <0>;
                };
                combo_2 {
                        timeout-ms = <50>;
                        key-positions = <1 2>;
                        bindings = <&kp N2>;
                        layers = <0>;
                };
                combo_3 {
                        timeout-ms = <50>;
                        key-positions = <2 3>;
                        bindings = <&kp N3>;
                        layers = <0>;
                };
                combo_4 {
                        timeout-ms = <50>;
                        key-positions = <3 4>;
                        bindings = <&kp N4>;
                        layers = <0>;
                };
                combo_5 {
                        timeout-ms = <50>;
                        key-positions = <4 5>;
                        bindings = <&kp N5>;
                        layers = <0>;
                };
                combo_6 {
                        timeout-ms = <50>;
                        key-positions = <6 7>;
                        bindings = <&kp N6>;
                        layers = <0>;
                };
                combo_7 {
                        timeout-ms = <50>;
                        key-positions = <7 8>;
                        bindings = <&kp N7>;
                        layers = <0>;
                };
                combo_8 {
                        timeout-ms = <50>;
                        key-positions = <8 9>;
                        bindings = <&kp N8>;
                        layers = <0>;
                };
                combo_9 {
                        timeout-ms = <50>;
                        key-positions = <9 10>;
                        bindings = <&kp N9>;
                        layers = <0>;
                };
                combo_0 {
                        timeout-ms = <50>;
                        key-positions = <10 11>;
                        bindings = <&kp N0>;
                        layers = <0>;
                };

                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <13 14>;
                        bindings = <&kp TAB>;
                        layers = <0>;
                };

                combo_pipe {
                        timeout-ms = <50>;
                        key-positions = <5 6>;
                        bindings = <&kp PIPE>;
                        layers = <0>;
                };
                combo_minur {
                        timeout-ms = <50>;
                        key-positions = <17 18>;
                        bindings = <&kp MINUS>;
                        layers = <0>;
                };
                combo_under {
                        timeout-ms = <50>;
                        key-positions = <29 30>;
                        bindings = <&kp UNDER>;
                        layers = <0>;
                };

                combo_lpar {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&mt LT LPAR>;
                        layers = <0>;
                };
                combo_rpar {
                        timeout-ms = <50>;
                        key-positions = <18 19>;
                        bindings = <&mt GT RPAR>;
                        layers = <0>;
                };
                combo_lbrc {
                        timeout-ms = <50>;
                        key-positions = <28 29>;
                        bindings = <&mt LBKT LBRC>;
                        layers = <0>;
                };
                combo_rbrc {
                        timeout-ms = <50>;
                        key-positions = <30 31>;
                        bindings = <&mt RBKT RBRC>;
                        layers = <0>;
                };

                combo_up {
                        timeout-ms = <50>;
                        key-positions = <14 16>;
                        bindings = <&kp UP>;
                        layers = <0>;
                };
                combo_down {
                        timeout-ms = <50>;
                        key-positions = <26 28>;
                        bindings = <&kp DOWN>;
                        layers = <0>;
                };
                combo_left {
                        timeout-ms = <50>;
                        key-positions = <14 15>;
                        bindings = <&kp LEFT>;
                        layers = <0>;
                };
                combo_right {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp RIGHT>;
                        layers = <0>;
                };
                combo_pgup {
                        timeout-ms = <50>;
                        key-positions = <2 4>;
                        bindings = <&kp PG_UP>;
                        layers = <0>;
                };
                combo_pg_dn_1 {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp PG_DN>;
                        layers = <0>;
                };
                combo_pg_dn_2 {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp PG_DN>;
                        layers = <0>;
                };
                combo_home {
                        timeout-ms = <50>;
                        key-positions = <2 3 4>;
                        bindings = <&kp HOME>;
                        layers = <0>;
                };
                combo_end {
                        timeout-ms = <50>;
                        key-positions = <26 27 28>;
                        bindings = <&kp END>;
                        layers = <0>;
                };

                combo_sys {
                        timeout-ms = <50>;
                        key-positions = <36 37 38>;
                        bindings = <&mo SYSTEM>;
                        layers = <0>;
                };
        };
};


/ {
        behaviors {
                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LSHFT>, <&kp LSHFT>, <&kp CAPSLOCK>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "BASE";
                                // -----------------------------------------------------------------------------------------
                                // | ESC  |  Q  |  W  |  F  |  P  |  B  | _________ |  J  |  L   |  U  |  Y  |  ;  |  =  |
                                // | BKSP |  A  |  R  |  S  |  T  |  G  | _________ |  M  |  N   |  E  |  I  |  O  |  '  |
                                // | SHFT |  Z  |  X  |  C  |  D  |  V  | _________ |  K  |  H   |  ,  |  .  |  /  |  `  |
                                //                    | CRL | SPC | GUI | _________ | ENT | SPC  | ALT |

                        bindings = <
                                &kp ESC    &kp Q  &kp W     &kp F      &kp P &kp B         &kp J    &kp L      &kp U      &kp Y    &kp SEMI  &kp EQUAL
                                &kp BSPC   &kp A  &kp R     &kp S      &kp T &kp G         &kp M    &kp N      &kp E      &kp I    &kp O     &kp SQT
                                &td0       &kp Z  &kp X     &kp C      &kp D &kp V         &kp K    &kp H      &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT GRAVE
                                                  &kp LCTRL &kp SPACE  &mt LGUI TAB        &kp RET  &kp SPACE  &kp RALT
                        >;
                };

                lower_layer {
                        label = "LOWER";
                                // -----------------------------------------------------------------------------------------
                                // | TAB  |  1  |  2  |  3  |  4  |  5  | _________ |  6   |  7   |  8    |  9     |  0    | BKSP |
                                // | SHFT |     |     |     |     |     | _________ | LEFT | DOWN |  UP   | RIGHT  |       |      |
                                // | CTRL | F1  | F2  | F3  | F4  | F5  | _________ | F6   | F7   |  F8   | F9     |  F10  | F11  |
                                //                    | GUI |     | SPC | _________ | ENT  | SYS  |  RALT |
 
                        bindings = <
                                &kp TAB    &kp N1  &kp N2    &kp N3    &kp N4  &kp N5                 &kp N6    &kp N7      &kp N8  &kp N9     &kp N0  &kp BSPC
                                &kp LSHFT  &sys_reset  &trans    &trans    &trans  &trans                 &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans  &trans
                                &kp LCTRL  &kp F1  &kp F2    &kp F3    &kp F4  &kp F5                 &trans    &trans      &trans  &trans     &trans  &trans
                                                             &kp LGUI  &trans  &kp SPACE              &kp RET   &mo SYSTEM  &kp RALT
                        >;
                };

                raise_layer {
                        label = "RAISE";
                                // -----------------------------------------------------------------------------------------
                                // |  TAB |  !  |  @  |  #  |  $  |  %  | _________ |  ^  |  &  |  *  |  (  |  )  | BKSP |
                                // | SHFT |     |     |     |     |     | _________ |  -  |  =  |  [  |  ]  |  \  |  `   |
                                // | CTRL |     |     |     |     |     | _________ |  _  |  +  |  {  |  }  | "|" |  ~   |
                                //                    | GUI |     | SPC | _________ | ENT |     | ALT |
                        bindings = <
                                &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT           &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
                                &kp LSHFT &sys_reset   &trans &trans   &trans   &trans              &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
                                &kp LCTRL &trans   &trans &trans   &trans   &trans              &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                                                        &kp LGUI &trans   &kp SPACE             &kp RET   &trans    &kp RALT
                        >;
                };

                system_layer {
                        label = "SYSTEM";
                                // -----------------------------------------------------------------------------------------
                                // | BTCLR| BT1  | BT2  | BT3   | BT4   | BT5        | _________ |     |     |     |     |     |   |
                                // | CTRL | Prev | Next | Vol - | Vol + | Play/Pause | _________ |     |     |     |     |     |  `   |
                                // | SHFT |      |      |       |       |            | _________ |     |     |     |     | RGB_ON |  RGB_OFF   |
                                //                      | GUI   |       | SPC        | _________ | ENT |  EP_ON  | EP_OFF |
                        bindings = <
                                &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4               &rgb_ug RGB_HUI   &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &trans  &ext_power EP_ON      &ext_power EP_OFF
                                &kp LCTRL   &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN   &kp C_VOL_UP  &kp C_PP                   &rgb_ug RGB_SAI   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans          &trans
                                &kp LSHFT   &out OUT_TOG  &out OUT_USB  &out OUT_BLE   &trans        &trans                     &rgb_ug RGB_SPI   &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_ON  &rgb_ug RGB_OFF
                                                                        &kp LGUI       &trans         &kp SPACE                 &kp RET  &trans  &trans
                        >;
                };
        };
};
